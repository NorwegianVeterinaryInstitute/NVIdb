% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/login.R, R/login_by_credentials.R,
%   R/login_by_input.R
\name{login}
\alias{login}
\alias{login_PJS}
\alias{login_EOS}
\alias{login_by_credentials}
\alias{login_by_credentials_PJS}
\alias{login_by_credentials_EOS}
\alias{login_by_input}
\alias{login_by_input_PJS}
\alias{login_by_input_EOS}
\title{Log in to data base services}
\usage{
login(
  dbservice,
  dbdriver = NULL,
  db = NULL,
  dbserver = NULL,
  dbport = NULL,
  dbprotocol = NULL
)

login_PJS()

login_EOS()

login_by_credentials(
  dbservice,
  dbdriver = NULL,
  db = NULL,
  dbserver = NULL,
  dbport = NULL,
  dbprotocol = NULL
)

login_by_credentials_PJS()

login_by_credentials_EOS()

login_by_input(
  dbservice,
  dbdriver = NULL,
  db = NULL,
  dbserver = NULL,
  dbport = NULL,
  dbprotocol = NULL,
  dbtext = NULL
)

login_by_input_PJS()

login_by_input_EOS()
}
\arguments{
\item{dbservice}{Name of the database service, for example "PJS" or "EOS". For database services where one don't use the premade
wrappers, the name can be chosen freely, but must be the same as used in \code{set_credentials}}

\item{dbdriver}{Name of database engine}

\item{db}{Name of database}

\item{dbserver}{Name of database server}

\item{dbport}{Port}

\item{dbprotocol}{Protocol to be used}

\item{dbtext}{used in login with input. Gives the possibility of showing another name than the dbservice in the windows asking for
username and password.}
}
\value{
An open ODBC-channel to the database service.
}
\description{
Log in to NVI's data base services, in particular journal_rapp/PJS and EOS.
}
\details{
The NVI has access to several database services. These functions log in to such services. The functions
    provides methods to either log in using credentials set in the user profile by \code{set_credentials} or use
    input windows for username and password. Thereby the hard coding of username and password can be avoided.

    \code{login} is general functions where all necessary specifications like server name and database name of
    the database must be input. The database provider can give information on what specifications that has to be used.
    This can be used to log in to many different databases. In the case that one login to a database service for
    which the connection parameters have been predefined (i.e. PJS, EOS, sea_sites and Fallvilt), it will be sufficient
    to provide the parameter dbservice.

    Depending on whether username and password have been saved in the users profile at the current computer or not,
    the user is asked to input credentials.

    \code{login_by_input} is general functions where all necessary specifications like server name and database name of
    the database must be input. In the case that one login to a database service for which the connection parameters have
    been predefined (i.e. PJS, EOS, sea_sites and Fallvilt), it will be sufficient to provide the parameter dbservice.
    The user is always asked to input username and password.

    \code{login_by_credentials} is general functions where all necessary specifications like server name and database name of
    the database must be input. In the case that one login to a database service for which the connection parameters have
    been predefined (i.e. PJS, EOS, sea_sites and Fallvilt), it will be sufficient to provide the parameter dbservice. The user
    is never asked for username and password, and the function can only be used when the credentials previously have been set
    in the user's profile at the current computer.

    \code{login_PJS}, \code{login_by_input_PJS}, and \code{login_by_credentials_PJS} are wrappers for the functions above
    where the specifications for the database journal_rapp/PJS have been preset. The user only need to input username and
    password or if the username and password for journal_rapp/PJS are stored in the user profile at the current computer,
    the user is automatically logged in to journal_rapp. If the password is no longer valid, an error occur. If so, the
    user must update the username and password by \code{set_credentials_PJS}.

    \code{login_EOS}, \code{login_by_input_EOS}, and \code{login_by_credentials_EOS} are wrappers for the functions above
    where the specifications for the database EOS have been preset. The user only need to input username and password
    or if the credentials are saved in the users profile by \code{set_credentials_EOS}, no input is needed.

    The login functions returns an open ODBC-channel to the database service. The database can then be queried by using
    functions in the package \code{RODBC}.

    When the session is finished, the script shall close the ODBC-channel by \code{odbcClose("myodbcchannel")} or \code{odbcCloseAll}.
}
\examples{
\dontrun{
require(RODBC)
journal_rapp <- login_PJS()
 # Reads hensiktregistret from PJS
  hensikter <- sqlQuery(journal_rapp,
                       "select * from v_hensikt",
                       as.is = TRUE,
                       stringsAsFactors = FALSE)
#
odbcClose(journal_rapp)
}

}
\seealso{
\code{\link{set_credentials}}
}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
\concept{Log in functions}
