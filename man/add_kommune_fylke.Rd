% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_kommune_fylke.R, R/copy_kommune_fylke.R,
%   R/read_kommune_fylke.R
\name{add_kommune_fylke}
\alias{add_kommune_fylke}
\alias{copy_kommune_fylke}
\alias{read_kommune_fylke}
\title{Manage translation from komnr to kommune, fylke and current komnr}
\usage{
add_kommune_fylke(
  data,
  translation_table = kommune_fylke,
  code_column = c("komnr"),
  new_column = c("gjeldende_komnr", "gjeldende_kommune", "gjeldende_fylkenr",
    "gjeldende_fylke"),
  position = "right",
  overwrite = FALSE
)

copy_kommune_fylke(
  filename = list("Kommune_UTF8.csv", "komnr_2_gjeldende_komnr_UTF8.csv",
    "Fylke_UTF8.csv"),
  from_path = paste0(set_dir_NVI("GrunndataLand"), "FormaterteData/"),
  to_path = NULL
)

read_kommune_fylke(
  filename = list("Kommune_UTF8.csv", "komnr_2_gjeldende_komnr_UTF8.csv",
    "Fylke_UTF8.csv"),
  from_path = paste0(set_dir_NVI("GrunndataLand"), "FormaterteData/")
)
}
\arguments{
\item{data}{Data frame with data with a column with old komnr}

\item{translation_table}{Data frame with the translation table for old komnr to current komnr}

\item{code_column}{The name of the column with the old komnr}

\item{new_column}{The name of the new column that should contain the current komnr}

\item{position}{[\code{character(1)}]\cr
The position for the new columns, can be one of c("first", 
    "left", "right", "last", "keep"). The input can be 
    abbreviated, but must be unique, i.e. c("f", "le", 
    "r", "la", "k"). Defaults to "right".}

\item{overwrite}{[\code{logical(1)}]\cr
When the new column(s) already exist, 
    the content in the existing column(s) is replaced by new data if 
    \code{overwrite = TRUE}. If the new column(s) already exist and 
    \code{overwrite = FALSE}, an error is issued. Defaults to \code{FALSE}.}

\item{filename}{Filename of the translation table for old komnr to current komnr}

\item{from_path}{Path for the source translation table}

\item{to_path}{Path for the target translation table when copying the translation table}
}
\value{
\code{add_kommune_fylke} A data frame where one or more of the columns c("kommune", "fylkenr", "fylke", "gjeldende_komnr",
    "gjeldende_kommune", "gjeldende_fylkenr", "gjeldende_fylke") have been added in the column(s) to the right of the column with the
    komnr.

    \code{read_kommune_fylke} A data frame with the original komnr and the corresponding kommune, fylkenr, fylke, and the current
    komnr, kommune, fylkenr, fylke. If not changing standard input to the function, the standard file at NVI's internal network is read.

    \code{copy_kommune_fylke} copies the source translation table for komnr to kommune, for old komnr to current komnr, and for
    fylkenr to fylke to given directory. If the target file already exists, the source file is copied only when it is newer than the target file.
}
\description{
Function to add columns with kommune (name), fylkenr, fylke (name), gjeldende_komnr, gjeldende_kommune,
   gjeldende_fylkenr, and gjeldende_fylke. In addition there are functions to read and copy the translation tables.
}
\details{
Data sources, like PJS, may provide data with komnr. These functions manage translating komnr to current komnr,
    kommune and fylke.

    \code{add_kommune_fylke} can be used to translate komnr into kommune (name), fylkenr, fylke (name), gjeldende_komnr,
    gjeldende_kommune, gjeldende_fylkenr, and gjeldende_fylke. The function can also be used to translate fylkenr into fylke (name),
    gjeldende_fylkenr, and gjeldende_fylke.

    One has to ensure that the code in the dataset represents a komnr or fylkenr. The function will translate any 4 and 2 digits
    that has the same ID as a kommune or fylke, respectively.

    Standard name for the kommunenummer is komnr. If the column with
    the komnr that should be translated has another name, the
    parameter \code{code_column =} can be input as a named vector.
    Standard names for the new columns are c("kommune", "fylkenr", "fylke",
    "gjeldende_komnr", "gjeldende_kommune", "gjeldende_fylkenr",
    "gjeldende_fylke"). Likewise, if the new columns should be given
    other names than, the parameter \code{new_column =} can be input
    as a named vector, see examples.

    The function uses a premade translation table that is made based on information in PJS adresseregister. The translation table
    is updated when informed that know there is a need, typically when there have been changes in kommune-structure.

    \code{position} is used to give the place if the new columns in the data.frame. For \code{position = "right"} the new variables are
    placed to the right of the code_variable. Likewise, for \code{position = "left"} the new variables are placed to the left of the
    code_variable. If \code{position = "first"} or \code{position = "last"} the new columns are placed first or last, respectively, in the
    data.frame. A special case occurs for \code{position = "keep"} which only has meaning when the new column has the same name as an existing
    column and \code{overwrite = TRUE}. In these cases, the existing column will be overwritten with new data and have the same position.

    \code{read_kommune_fylke} read the files "komnr_2_gjeldende_komnr_UTF8.csv", "Kommune_UTF8.csv", and "Fylke_UTF8.csv", into a single data
    frame that can be used by \code{add_kommune_fylke}. Standard setting will read in the file from NVI's internal network. If changing the
    from_path, the function can be used to read the translation files from other directories. This can be useful if having a stand alone app
    with no connection the NVI's internal network. In other cases, it should be avoided.

    \code{copy_kommune_fylke} copy the files "komnr_2_gjeldende_komnr_UTF8.csv",
    "Kommune_UTF8.csv", and "Fylke_UTF8.csv", respectively, to a given
    directory.
}
\examples{
\dontrun{
# Reading from standard directory at NVI's network
kommune_fylke <- read_kommune_fylke()

# Copy standard file from standard location to the subdirectory Data below the working directory
copy_kommune_fylke(to_path = "./Data/")

# Reading from the subdirectory Data below the working directory
kommune_fylke <- read_kommune_fylke(from_path = "./Data/")

# Add new column with current komnr and kommune
# The variable gammelt_komnr should be translated and the new variables with gjeldende_komnr" and
# "gjeldende_kommune" is named komnr and kommune, respectively.
newdata <- add_kommune_fylke(olddata,
                             translation_table = kommune_fylke,
                             code_column = c("gammelt_komnr" = "komnr"),
                             new_column = c("komnr" = "gjeldende_komnr",
                                            "kommune" = "gjeldende_kommune"))
}

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
