% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_code_combinations.R
\name{transform_code_combinations}
\alias{transform_code_combinations}
\title{Transform combinations of code values into new values}
\usage{
transform_code_combinations(
  data,
  from_values,
  to_values,
  from_columns,
  to_columns,
  impute_when_missing_from = NULL
)
}
\arguments{
\item{data}{[\code{data.frame}]\cr
Data with code values that should be transformed.}

\item{from_values}{[\code{list}]\cr
List with vector(s) of code values that should transformed, see details and examples.}

\item{to_values}{[\code{list}]\cr
List with vector(s) of code values that should be the results of the transformation,
see details and examples.}

\item{from_columns}{[\code{character}]\cr
Column names for the code variables that should be transformed.}

\item{to_columns}{[\code{character}]\cr
Column names for the code variables with the results of the transformation.}

\item{impute_when_missing_from}{[\code{character}]\cr
Column names for the code variables from which code values should be copied if no
transformation is performed. Defaults to \code{from_columns}.}
}
\value{
A \code{data.frame}.
}
\description{
Transforms combinations of code values into new values in a data
frame. This is intended for use when only a few code value combinations
should be changed and one will avoid building translation tables or code
with several if, which or case_when statements. In particularly it was
inspired by the need of changing a few code combinations in PJS data when
reporting surveillance programmes.
}
\details{
The function builds a transformation table based on the input. The
\code{from_values} and the \code{to_values} give the data to a transformation table,
and the \code{from_columns} and the \code{to_columns} give the column names for the
transformation table.

The \code{from_values} is a list of one or more vectors. Each vector represents one
column variable with code values. The first  entry in each vector
constitute one code combination to be transformed, the second entry
constitutes the next code combinations. Likewise, is the \code{to_values} a list
of one or more vectors. Each vector represents one column variable with
code values to which the code combinations in the \code{from_values} should be
transformed.

The \code{from_columns} is a vector of column names for the codes that should be
transformed. The column names will name each vector with code values in
the \code{from_values} list. The column names must exist in the data. Likewise,
the \code{to_columns} is a vector of column names for the columns with the
transformed code values. The \code{to_columns} can be the same as the
from_columns, in which case the transformed combinations will replace
the original entries. If the \code{to_columns} don't exist in data, the column
will be added to the data.

If the codes are not transformed, these will be kept in the data.
\code{impute_when_missing_from} gives the column names of the columns from which
to impute. Normally this will be the same as the \code{from_columns.} However,
if the number of columns in \code{to_columns} is less than in from_columns, it
will be necessary to give the columns from which to keep the code.
}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
